
NEW TODOS:
==========

1. Populate all the datasets in the datasets repo
	a. Check the existing datasets
	b. Add missing datasets in to the repository
	c. Check the existing models
	d. Add missing models
2. Redo the entire readme
3. Create readme for the arduino part
4. Populate results in a csv instead of json file
5. temp directory in dev mode should be the current directory so that the updates are in place to help with debugging. Change this.
6. Create a solution file for development on Windows
7. Format all the files present in the files.txt file
8. Add a flag to fail when results do not match with the benchmarked results
9. Ask Aayan to test all benchmarks on Arduino


TEMPLATES:
==========

1.  For each file, do the following:
	a. Format document
	b. Check imports
	c. Organize imports


OLD TODOS:
==========

11.	Check EXP() in library_fixed.h and arduino/library.h

1.	inputVar in IR.Var is redundant. You can do that check using self.globalVars as well. Remove it.
2.	internalVar in IR.Var is never used. Remove it.
3.	The current code generation process involves creating temp memory only when it is required. If the operation can be performed in-place, no memory is created. Make this clear somewhere.
4.	Add debug statements everywhere to show more information about the compilation like how the scale and the interval values change at each operator.
5.	Use tree sum in sparse matrix multiplication as well. Currently not being used.
6.	Check all the 'TODO's.
7.	Re-check visitExp().
8.	Add another version of tree sum where precision is not lost
9.	Re-write getScale(), getScaleForExp(), getScaleAndIntervalForAdd(), getIntervalForExp() function.
10.	Write getScaleAndIntervalForSub()
11.	Rewrite reading mutableVarsProfile similar to expProfile. Read once, store and reuse instead of reading at each mutable var.
12.	Add self.log.print() statements at every operation.
13.	Try trimming the model parameters as well and see if there are any significant scale changes
